require 'rubygems'
require 'right_aws'
require 'turbo'
require 'launch-pad'
require 'yaml'
require 'active_record'
require 'sqlite3'
control_queue = ARGV[0]
root_dir = ARGV[1]

if control_queue.nil?
  puts "No queue name specified: exiting"
  exit
end

host = `hostname`

puts "#{host} monitoring #{control_queue}"
puts "Root directory: #{root_dir}"

Turbo::Key.configuration = "#{root_dir}/config/aws.yml"

ActiveRecord::Base.establish_connection({
      :adapter => "sqlite3", 
      :dbfile => "#{root_dir}/db/database.sqlite"
})

queue = Turbo::Queue.new(control_queue)
queue.send(%q{register: haproxy})
queue.send(%q{
register: host
name: ec2-1-2-3-4.amazonaws.com
role: api
})

queue.send(%q{
unregister: host
name: ec2-1-2-3-4.amazonaws.com
role: api
})

activity = nil
rebuild_config = false

loop do
  
  puts "Checking queue"
  
  if queue.messages?
    for message in queue.messages
      puts "MESSAGE: #{message} (cleared)"
      message.clear
      command = LaunchPad::Parser.parse(message)
      
      begin
        command.activate
        puts "Command activated: complete (#{command.sets_activity?})"
      rescue LaunchPad::UndefinedRegistrationException => e
        puts "Command not defined: #{e}"
      end
              
      if command.sets_activity?
        activity = command
        puts "Activity reset to: #{activity.class.to_s}"
      end
        
      if command.invalidates_config?
        puts "Marking configuration for rebuild"
        rebuild_config = true
      end      
      
    end

    puts "Rebuild? #{rebuild_config}"
        
    if rebuild_config == true
      puts "Rebuilding..."
      unless activity.nil?
        puts "Rebuilding configuration"
        activity.rebuild_config :with_templates => "#{root_dir}/templates"
      end
      rebuild_config = false
    end
    
  end
  
  sleep 5
end